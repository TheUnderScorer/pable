on:
  workflow_dispatch:
  push:
    tags:
      - 'api-[v]\d+.\d+.\d+'
      - 'api-\d+.\d+.\d+'
name: Deploy app on AWS

jobs:
  deploy-server:
    runs-on: ubuntu-latest
    name: Deploy server
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Node.js 15.x
        uses: actions/setup-node@v2
        with:
          node-version: 15.x

      - name: Install deps
        run: npm ci && npm install ts-node tsconfig-paths -g

      - name: Build docker image
        run: npm run build:api-docker

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: api_repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag skryba-api:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update terraform workspace variables
        env:
          TF_TOKEN: ${{ secrets.TF_API_TOKEN }}
          WORKSPACE_ID: ${{ secrets.TF_WORKSPACE_ID }}
          TAG: ${{ github.sha }}
        run: npm run update-workspace-variables -- --tag $TAG --token $TF_TOKEN --workspace_id $WORKSPACE_ID

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: cd deploy/infra && terraform fmt -check

      - name: Terraform Init
        id: init
        run: cd deploy/infra && terraform init

      - name: Terraform Apply
        run: cd deploy/infra && terraform apply -auto-approve
        env:
          TF_VAR_image_tag: ${{ github.sha }}

